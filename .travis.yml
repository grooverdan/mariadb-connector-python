sudo: true
os: linux
dist: bionic
language: c
services: docker
addons:
  hosts:
    - mariadb.example.com

before_install:
  - git clone https://github.com/mariadb-corporation/connector-test-machine.git

install:
  - export MAIN_PATH=`pwd`
  # install pyenv to test multiple python version
  - git clone https://github.com/pyenv/pyenv.git ~/.pyenv
  - export PYENV_ROOT="$HOME/.pyenv"
  - eval "$(pyenv init -)"
  - export PATH="$PYENV_ROOT/shims:$PYENV_ROOT/bin:$PATH"
  # install c dependency
  - sudo apt-get install software-properties-common
  - sudo apt-get install -f libssl-dev libssl1.1
  - sudo apt-get install -f
  - git clone https://github.com/mariadb-corporation/mariadb-connector-c.git ~/.cc_3.1
  - cd ~/.cc_3.1
  - mkdir bld
  - cd bld
  - cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr
  - make -j4
  - sudo make install
  - export MARIADB_PLUGIN_DIR==`mariadb_config --plugindir`
  - export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/lib/mariadb
  # install "install-latest" to retrieve latest python version corresponding to major.minor version
  - git clone https://github.com/momo-lab/pyenv-install-latest.git "$(pyenv root)"/plugins/pyenv-install-latest
  - export REAL_PYTHON_VERSION=$(pyenv install-latest --print $PYTHON_VER)
  - echo $REAL_PYTHON_VERSION
  - pyenv install $REAL_PYTHON_VERSION
  - export PYENV_VERSION=$REAL_PYTHON_VERSION
  - pyenv versions
  # install server
  - cd $MAIN_PATH
  - source connector-test-machine/launch.sh -t "$srv" -v "$v" -d testp -l "$local"

env:
  global:
    - PYTHON_VER="3.10"

stages:
  - Minimal
  - name: Enterprise
    if: type = push AND fork = false
  - Community

jobs:
  fast_finish: true
  allow_failures:
    - env: srv=build
    - env: srv=xpand
  include:
    - stage: Minimal
      env: srv=mariadb v=10.6 local=1  PYTHON_VER="3.10"
      name: "CS 10.6 - python 3.10"
    - env: srv=mariadb-es v=10.6
      name: "ES 10.6"
      if: type = push AND fork = false

    - stage: Enterprise
      env: srv=mariadb-es v=10.4
      name: "ES 10.4"
    - env: srv=mariadb-es v=10.5
      name: "ES 10.5"
    - env: srv=maxscale
      name: "Maxscale"
    - env: srv=xpand TEST_DB_OTHER="initSql=SET NAMES UTF8"
      name: "Xpand"
    - env: srv=skysql
      name: "SkySQL"
    - env: srv=skysql-ha
      name: "SkySQL with replication"

    - stage: Community
      env: srv=mariadb v=10.6
      os: windows
      language: shell
      name: "CS 10.6 - Windows"
    - env: srv=mariadb v=10.3 local=1
      name: "CS 10.3"
    - env: srv=mariadb v=10.4 local=1
      name: "CS 10.4"
    - env: srv=mariadb v=10.5 local=1
      name: "CS 10.5"
    - env: srv=mariadb v=10.7 local=1
      name: "CS 10.7"
    - env: srv=mariadb v=10.8 local=1
      name: "CS 10.8"
    - env: srv=mariadb v=10.6 PYTHON_VER="3.7"
      name: "CS 10.6 - python 3.7"
    - env: srv=mariadb v=10.6 PYTHON_VER="3.8"
      name: "CS 10.6 - python 3.8"
    - env: srv=mariadb v=10.6 PYTHON_VER="3.9"
      name: "CS 10.6 - python 3.9"
    - env: srv=mariadb v=10.6 local=1 PYTHON_VER="3.10" BENCH=1
      name: "Benchmarks"
    - env: srv=mysql v=5.7
      name: "MySQL 5.7"
    - env: srv=mysql v=8.0
      name: "MySQL 8.0"
    - env: srv=build
      name: "CS build"

notifications:
  email: false

script:
  - python --version
  - python setup.py build
  - python setup.py install
  - cd testing
  - |-
    if [ -z "$BENCH" ] ; then
      python -m unittest discover -v
    else
      pip install mysql-connector-python pymysql pyperf
      export TEST_MODULE=mariadb
      python bench_init.py
      python bench.py -o mariadb_bench.json --inherit-environ=TEST_DB_USER,TEST_DB_HOST,TEST_DB_DATABASE,TEST_DB_PORT,TEST_REQUIRE_TLS,TEST_DB_PASSWORD,TEST_MODULE
      export TEST_MODULE=mysql.connector
      python bench.py -o mysql-connector-python_bench.json --inherit-environ=TEST_DB_USER,TEST_DB_HOST,TEST_DB_DATABASE,TEST_DB_PORT,TEST_REQUIRE_TLS,TEST_DB_PASSWORD,TEST_MODULE
      export TEST_MODULE=pymysql
      python bench.py -o pymysql_bench.json --inherit-environ=TEST_DB_USER,TEST_DB_HOST,TEST_DB_DATABASE,TEST_DB_PORT,TEST_REQUIRE_TLS,TEST_DB_PASSWORD,TEST_MODULE
      python -m pyperf compare_to pymysql_bench.json mysql-connector-python_bench.json mariadb_bench.json --table
    fi
